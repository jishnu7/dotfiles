#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2017 Jishnu Mohan <jishnu7@gmail.com>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $status_text;
my $icon;
my $color;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;

if ($percent < 20) {
	$icon = "";
	$color = "#FF0000";
} elsif ($percent < 30) {
	$icon = "";
	$color = "#FFAE00";
} elsif ($percent < 60) {
	$icon = "";
	$color = "#FFF600";
} elsif ($percent < 85) {
	$icon = "";
	$color = "#A8FF00";
} else {
	$icon = "";
	$color = "#A8FF00";
}

if ($status eq 'Discharging') {
	$status_text = '';
} elsif ($status eq 'Charging') {
	$status_text = ' ⚡';
}

$full_text = "$percent%";

$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
	$full_text .= " $1";
}

# to print utf-8
use open ':std', ':encoding(UTF-8)';

print "$icon $status_text $full_text\n";
print "$short_text\n";

if ($status eq 'Discharging') {
	print "$color\n";
	if ($percent < 5) {
		exit(33);
	}
}

exit(0);
