call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

set encoding=utf8 "utf8 as standard

set nu "always show line numbers

" Tabs
set smarttab
set expandtab "space instead of tab
set shiftwidth=4 "tab = spaces
set tabstop=4
set softtabstop=4 

set ai "auto indent
set si "smart indent
set wrap "wrap lines

set showmatch "show matching brackets

syntax enable "syntax highlighting
set background=dark
"colorscheme ir_black

"set background=light
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme solarized

filetype on
"autoload CloseTag for xml/html files
autocmd FileType html,htmldjango,jinjahtml,eruby,mako let b:closetag_html_style=1
autocmd FileType html,xhtml,xml,htmldjango,jinjahtml,eruby,mako source ~/.vim/bundle/closetag/plugin/closetag.vim

set listchars=tab:▸\ ,eol:¬
set list

set hidden "manage hidden buffers

" FileType based settings
autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType php setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType xml setlocal ts=2 sts=2 sw=2 expandtab

" Open NERDTree if no file specified
autocmd vimenter * if !argc() | NERDTree | endif

" KeyMaps
nnoremap <silent> <F5> :call <SID>StripTrailingWhitespaces()<CR>
map <C-h> <C-w>h "moving between windows
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-S-]> gt "moving between tabs
map <C-S-[> gT
map <C-1> 1gt
map <C-2> 2gt
map <C-3> 3gt
map <C-4> 4gt
map <C-5> 5gt
map <C-6> 6gt
map <C-7> 7gt
map <C-8> 8gt
map <C-9> 9gt
map <C-0> :tablast<CR>]
map <C-n> :NERDTreeToggle<CR>

" Functions
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction
